import { useEffect, useState } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import useRealmStore, { userTypes } from '../../hooks/useRealmStore';
import { NoteForVisitor } from '../../components/NotePage/NoteForVisitor/NoteForVisitor';
import { NoteForAdmin } from '../../components/NotePage/NoteForAdmin/NoteForAdmin';
import useNoteStore from '../../hooks/useNoteStore';
import { ButtonLink } from '../../components/shared/Button/Button';

const statusTypes = {
	success: 'success',
	error: 'error',
	loading: 'loading',
};

export default function NotePage() {
	const router = useRouter();
	let { noteId } = router.query;

	const setValues = useNoteStore((state) => state.setValues);
	const clearStore = useNoteStore((state) => state.clearStore);

	const userType = useRealmStore((state) => state.userType);
	const searchNoteById = useRealmStore((state) => state.searchNoteById);
	const db = useRealmStore((state) => state.db);

	const [status, setStatus] = useState(statusTypes.loading);

	useEffect(() => {
		if (db) {
			(async () => {
				const noteData = await searchNoteById(noteId);
				if (noteData) {
					const {
						_id: noteId,
						title,
						content,
						tags: noteTags,
						isPublic,
					} = noteData;
					setValues({ noteId, title, content, noteTags, isPublic });
					setStatus(statusTypes.success);
				} else setStatus(statusTypes.error);
			})();
		}
	}, [noteId, userType, db]);

	useEffect(() => {
		const exitingFunction = () => clearStore();

		router.events.on('routeChangeStart', exitingFunction);

		return () => {
			router.events.off('routeChangeStart', exitingFunction);
		};
	}, []);

	return (
		<>
			<title>Notatka</title>
			<Head>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			{status === statusTypes.success ? (
				<>
					{userType === userTypes.admin ? <NoteForAdmin /> : <NoteForVisitor />}
				</>
			) : status === statusTypes.loading ? (
				<p>Loading...</p>
			) : (
				<p>
					Wystąpił błąd przy wyświetleniu notatki. Sprawdź połączenie z
					internetem lub odśwież stronę.
					<ButtonLink href="/">Wróć do strony głównej</ButtonLink>
				</p>
			)}
		</>
	);
}
